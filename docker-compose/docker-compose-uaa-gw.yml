version: '2'
services:
    uaa-app:
        image: uaa
        environment:
            - SPRING_PROFILES_ACTIVE=prod,swagger
            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
            # MySQL server IP 192.168.0.1 is resolved though docke-localhost network
            # In this way we access the mysql server running in our PCs
            - SPRING_DATASOURCE_URL=jdbc:mysql://192.168.0.1:3306/uaa?useUnicode=true&characterEncoding=utf8&useSSL=false
            - SPRING_DATASOURCE_USERNAME=root
            - SPRING_DATASOURCE_PASSWORD=root
            - JHIPSTER_SLEEP=30
            - SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES=elasticsearch:9300
            - JHIPSTER_REGISTRY_PASSWORD=admin
            - _JAVA_OPTIONS=-Djava.net.preferIPv4Stack=true
        networks:
            - docker-localhost
    
    gateway-app:
        image: gateway
        environment:
            - SPRING_PROFILES_ACTIVE=prod,swagger
            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
            - SPRING_DATASOURCE_URL=jdbc:mysql://192.168.0.1:3306/gateway?useUnicode=true&characterEncoding=utf8&useSSL=false
            - SPRING_DATASOURCE_USERNAME=root
            - SPRING_DATASOURCE_PASSWORD=root
            - JHIPSTER_SLEEP=30
            - SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES=elasticsearch:9300
            - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka
            - SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES=zookeeper
            - JHIPSTER_REGISTRY_PASSWORD=admin
            - JAVA_OPTS=-Xmx512m -Xms256m
            - _JAVA_OPTIONS=-Xmx512m -Xms256m
        ports:
            - 8081:8080
        networks:
            - docker-localhost

    elasticsearch:
        image: elasticsearch:2.4.6
        ports:
            - 9200:9200
            - 9300:9300
        networks:
            - docker-localhost

    zookeeper:
        extends:
            file: kafka.yml
            service: zookeeper
        ports:
            - 10000:10000
        networks:
            - docker-localhost
    
    kafka:
        extends:
            file: kafka.yml
            service: kafka
        networks:
            - docker-localhost
    
    jhipster-registry:
        extends:
            file: jhipster-registry.yml
            service: jhipster-registry
        networks:
            - docker-localhost

networks:
    # To create this network in your local host
    # docker network create -d bridge --subnet 192.168.0.0/24 --gateway 192.168.0.1 docker-localhost
    docker-localhost:
        external: true
